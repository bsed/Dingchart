<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:ResourceDictionary.Resources"
      xmlns:control="clr-namespace:ResourceDictionary.Control"
        xmlns:converters="clr-namespace:ResourceDictionary.Converters"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity">
  
    <Style x:Key="ListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="FontFamily" Value="Microsoft YaHei"/>
        <!--<Setter Property="HorizontalContentAlignment" 
                Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
		<Setter Property="VerticalContentAlignment" 
                Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>-->
		<Setter Property="Padding" Value="2,0,0,0"/>
        
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBoxItem}">
					<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                            SnapsToDevicePixels="true" Margin="0" Padding="2,0,0,0">
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>

                    <ControlTemplate.Triggers>
						<Trigger Property="IsSelected" Value="true"/>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true"/>
								<Condition Property="Selector.IsSelectionActive" Value="false"/>
							</MultiTrigger.Conditions>
						</MultiTrigger>
						<!--<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            
						</Trigger>-->
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<SolidColorBrush  x:Key="ListBorder" />
	<Style x:Key="ListBoxStyle" TargetType="{x:Type ListBox}">
		<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
		<Setter Property="BorderBrush" Value="{StaticResource ListBorder}"/>
		<Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontFamily" Value="Microsoft YaHei"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
		<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBox}">
					<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="0" SnapsToDevicePixels="true">
						<ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
							<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
						</ScrollViewer>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsGrouping" Value="true">
							<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
    <Style x:Key="ListBoxItemStyleMain" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontFamily" Value="Microsoft YaHei"/>
		<Setter Property="Background" Value="Transparent"/>
		<!--<Setter Property="HorizontalContentAlignment" 
                Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
		<Setter Property="VerticalContentAlignment" 
                Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>-->
		<Setter Property="Padding" Value="0,0,0,0"/>
		<Setter Property="Template">
			<Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid x:Name="Bd"  VerticalAlignment="Stretch" HorizontalAlignment="Stretch" >

                        <Grid.Resources>
                            <converters:ButtonImageConvertor x:Key="ButtonImageConvertor" />
                        </Grid.Resources>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="44"/>
                            <RowDefinition Height="20"/>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0"  x:Name="listItemImage"  VerticalAlignment="Stretch" HorizontalAlignment="Stretch" >
                            <Border  x:Name="listItemImageBorder" VerticalAlignment="Center" 
                                     Background="{Binding ButtonImage,Converter={StaticResource ButtonImageConvertor}}"  
                                     HorizontalAlignment="Center" Height="24" Width="24">
                            </Border>
                        </Grid>
                        <Grid Grid.Row="1"   x:Name="listItemText" 
                              VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Width="{TemplateBinding Width}" Height="16">
                            <TextBlock Margin="0,-4,0,0" TextWrapping="Wrap" 
                                        Text="{Binding Text}" 
                                        TextAlignment="Center" Foreground="{TemplateBinding Foreground}" 
                                       FontFamily="Microsoft YaHei" Width="{TemplateBinding Width}"/>
                        </Grid>

                    </Grid>

					<ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Bd" Value="#7b7b99"/>
                            <Setter Property="Foreground"  Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>

                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Foreground"  Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            <Setter Property="Background" TargetName="Bd"  Value="#7b7b99" />
						</Trigger>

                        <!--<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="Selector.IsSelectionActive" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="#7b7b99"/>
                        </MultiTrigger>-->
                    </ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
    
	<!-- 应该在此定义资源字典条目。-->
    <Style x:Key="ListBoxItemStyleChild" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontFamily" Value="Microsoft YaHei"/>
        <!--<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>-->
        <!--<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>-->
        <Setter Property="Padding" Value="0,0,0,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="OnLoaded1">
                            <!--<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Bd">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>-->
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="Bd"  VerticalAlignment="Stretch" HorizontalAlignment="Stretch" >
                        <Grid.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform/>
                                <RotateTransform/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Grid.RenderTransform>
                        <Grid.Resources>
                            <converters:ButtonImageConvertor x:Key="ButtonImageConvertor" />
                        </Grid.Resources>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="44"/>
                            <RowDefinition Height="20"/>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0" Width ="32" Height ="32" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" >
                            <Border  VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="{Binding ButtonImage,Converter={StaticResource ButtonImageConvertor}}" Height="32" Width="32" />
                        </Grid>

                        <Grid Grid.Row="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Width="{TemplateBinding Width}" Height="16">
                            <Grid.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Grid.RenderTransform>
                            <TextBlock Margin="0,-4,0,0" TextWrapping="Wrap" 
                                        Text="{Binding Text}" 
                                        TextAlignment="Left" Foreground="{TemplateBinding Foreground}" FontFamily="Microsoft YaHei" Width="{TemplateBinding Width}"/>
                        </Grid>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Bd" Value="#AAAAAA"/>
                            <Setter Property="RenderTransform">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1.00" ScaleY="1.00"/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <!--<EventTrigger RoutedEvent="FrameworkElement.Loaded">
                            <BeginStoryboard x:Name="OnLoaded1_BeginStoryboard" Storyboard="{StaticResource OnLoaded1}"/>
                        </EventTrigger>-->
                        <Trigger Property="IsSelected" Value="true">
                            <!--<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>-->
                            <Setter Property="Background" TargetName="Bd" Value="#999999"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="Selector.IsSelectionActive" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="#999999"/>
                            <!--<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>-->
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style  x:Key="ListItemStyle" TargetType="{x:Type ListViewItem}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="FontFamily" Value="Microsoft YaHei"/>
        <Setter Property="Padding" Value="0,0,0,0"/>
        <Setter Property="BorderThickness" Value="0,0,0,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <ContentPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <!--SelectedItem with focus-->
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#D4EDFF" />
            <!--SelectedItem without focus-->
            <!--<SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="#3399FF"/>-->
            <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="White"/>
        </Style.Resources>
        <!-- 设置触发器 -->
        <Style.Triggers>
            <!--<Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" Value="#F2F2F2"/>
                </Trigger>-->
            <Trigger Property="IsFocused" Value="false">
                <Setter Property="Background" Value="White"/>
            </Trigger>

        </Style.Triggers>
    </Style>
    <Style x:Key="ListViewStyle" TargetType="{x:Type ListView}">
        <Setter Property="FontFamily" Value="Microsoft YaHei"/>
        <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True"></Setter>
        <!--<Setter Property="VirtualizingPanel.VirtualizationMode" Value="Recycling"></Setter>
        <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling"></Setter>-->

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListView}">
                    <Grid>
                        <ItemsPresenter/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ListViewStyleScrollview" TargetType="{x:Type ListView}">
        <Setter Property="FontFamily" Value="Microsoft YaHei"/>
        <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True"></Setter>
        <!--<Setter Property="VirtualizingPanel.VirtualizationMode" Value="Recycling"></Setter>
        <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling"></Setter>-->
        <Setter Property="ScrollViewer.CanContentScroll" Value="false"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListView}">
                    <Grid>
                        <control:DingScrollview Focusable="false" Padding="0">
                            <ItemsPresenter/>
                        </control:DingScrollview>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <converters:UnReadConvertor x:Key="UnReadConvertor"/>
    <converters:BoolToVisibilityConvertor x:Key="BoolToVisibilityConvertor"/>
    <converters:ReplaceEmojiToIcoConvertor x:Key="ReplaceEmojiToIcoConvertor"/>
    <converters:TextLengthConvertor x:Key="TextLengthConvertor"/>
    
    <Style  x:Key="ChartListItemStyle" TargetType="{x:Type ListViewItem}">
        <Setter Property="Cursor" Value="Hand"/>
   
        <Setter Property="Height" Value="60"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
        <Setter Property="FontFamily" Value="Microsoft YaHei"/>
        <Setter Property="Padding" Value="0,0,0,0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border x:Name="Bd" BorderThickness="0"  Margin="0" Padding="0" SnapsToDevicePixels="true">
                        <Grid  Name="Grid" Margin="5,0,10,0"   Background="Transparent" ShowGridLines="False" >
                            <Grid.RowDefinitions >
                                <RowDefinition Height="0.5*"/>
                                <RowDefinition Height="0.5*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="55"/>
                                <ColumnDefinition MinWidth="152"/>
                                <ColumnDefinition Width="38"/>
                            </Grid.ColumnDefinitions>

                            <!--<Ellipse  x:Name="EllipseWithImageBrush"  StrokeThickness="{DynamicResource Ellipse_}"  Stroke="#cccccc"  Margin="5" HorizontalAlignment="Left" 
                 Height="{DynamicResource chartsessionIcoHeight}" Width="{DynamicResource chartSessionIcoWidth}"
                  VerticalAlignment="Top" Grid.Column="0" Grid.RowSpan="2" >
                                <Ellipse.Fill>
                                    <ImageBrush  x:Name="Ico" ImageSource="{Binding Path=AvatarPath, Mode=OneWay}"/>
                                </Ellipse.Fill>
                            </Ellipse>-->
                            <Border Name="EllipseWithImageBrush"  BorderBrush="{DynamicResource AvatarBorderBrush}"   BorderThickness="{DynamicResource AvatarThickness}"  Margin="0"  HorizontalAlignment="Center"
                              Height="38" Width="38"  VerticalAlignment="Center"  Grid.Column="0" Grid.RowSpan="2"  CornerRadius="{DynamicResource AvatarCornerRadius}"   UseLayoutRounding="True">
                                <Grid>
                                    <Border Name="imgBorder"  Background="White"    CornerRadius="{DynamicResource AvatarCornerRadius}" />
                                    <Image Name="Ico" Source="{Binding Path=AvatarPath, Mode=OneWay}" Stretch="Fill"  >
                                        <Image.OpacityMask>
                                            <VisualBrush Visual="{Binding ElementName=imgBorder, Mode=OneTime}" />
                                        </Image.OpacityMask>
                                    </Image>
                                </Grid>
                            </Border>
                            <TextBlock Name="LbDate" Text="{Binding Path=DateStr, Mode=OneWay}"    Width="auto" VerticalAlignment="Center"
               IsEnabled="False" HorizontalAlignment="Left" Grid.Column="2"  ScrollViewer.VerticalScrollBarVisibility="Disabled" 
               Grid.Row="0" FontSize="12" Foreground="{DynamicResource foreground99}" />
                            <!--<Label Name="LbDate" Content="{Binding Path=DateStr, Mode=OneWay}"  HorizontalContentAlignment="Left"  Width="45"
               IsEnabled="False" BorderThickness="0" VerticalContentAlignment="Center" Grid.Column="1"  ScrollViewer.VerticalScrollBarVisibility="Disabled" 
               Grid.Row="0" FontSize="12" Foreground="{DynamicResource foreground99}" Grid.ColumnSpan="2" Margin="144,0,0,0" />-->
                            <TextBlock Name="LbTitle" Text="{Binding Path=Name, Mode=OneWay}"  IsEnabled="False"   Grid.Row="0"
                 Grid.Column="1"   ScrollViewer.VerticalScrollBarVisibility="Disabled" FontSize="14"  VerticalAlignment="Bottom"
                                   TextTrimming="CharacterEllipsis"  Width="120" ToolTip="{Binding Path=Name, Mode=OneWay}"
               Margin="5,0,25,4" Foreground="{DynamicResource foreground33}" HorizontalAlignment="Left"/>
                            <VirtualizingStackPanel  HorizontalAlignment="Left" Grid.Column="1" Grid.Row="1" Orientation="Horizontal" Margin="5,0,0,0">
                                <TextBlock Name="AtLable" Text="[有人@我]" Width="auto" HorizontalAlignment="Left" VerticalAlignment="Top"  
                   FontSize="12" Foreground="#FF6159" Visibility="{Binding Path=Atme,Converter={StaticResource BoolToVisibilityConvertor}, Mode=OneWay}" />
                                <TextBlock Name="LbContent"  TextTrimming="CharacterEllipsis"  Width="130"
               IsEnabled="False" VerticalAlignment="Top" ScrollViewer.VerticalScrollBarVisibility="Disabled" 
               FontSize="12"  Foreground="{DynamicResource foreground88}" >
                                        <!--Tag="{Binding Path=LastMessage, Mode=OneWay,Converter={StaticResource ReplaceEmojiToIcoConvertor}}"-->
                                    <TextBlock.Tag >
                                        <MultiBinding Converter="{StaticResource ReplaceEmojiToIcoConvertor}" >
                                            <Binding Path="LastMessage" />
                                            <Binding ElementName="LbContent"  />
                                        </MultiBinding>
                                    </TextBlock.Tag>
                                           <!--<i:Interaction.Triggers>
                    <i:EventTrigger EventName="Loaded">
                        <i:InvokeCommandAction Command="{Binding Path=TextBlockLoaded}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>-->
                                </TextBlock>
                            </VirtualizingStackPanel>
                           
                            <Ellipse Name="ImgYuan" Visibility="{Binding ShowYuan,Converter={StaticResource BoolToVisibilityConvertor}, Mode=OneWay}"  Fill="#FF6159"
                                    HorizontalAlignment="Left" Grid.Row="1" Grid.Column="2"   VerticalAlignment="Top" Stretch="Fill" Width="10" Height="10" />
                            <Button Name="BtnUnred"  Grid.Row="1" Grid.Column="2" Style="{DynamicResource Unread}" 
                                        Content="{Binding Path=NewMsgCount, Mode=OneWay,Converter={StaticResource UnReadConvertor}}"  VerticalAlignment="Bottom" Margin="0,0,0,12" />
                            <Image  Name="ImgQuiet"  Visibility="{Binding Path=Quiet, Mode=OneWay,Converter={StaticResource BoolToVisibilityConvertor}}"  HorizontalAlignment="Right" 
                                        Grid.Row="1" Grid.Column="2" Source="pack://application:,,,/ResourceDictionary;Component/Images/Message_nodistrub.png" 
                                        Stretch="Fill" Width="15" Height="15"  Margin="0,0,5,0" VerticalAlignment="Top"></Image>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger  Binding="{Binding  Path=Top}" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="#DCDCDD"/>
                        </DataTrigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource listSelect}"/>
                        </Trigger>
                        <!--<Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="#D4EDFF"/>
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
        <Style.Resources>
            <!--SelectedItem with focus-->
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#D4EDFF" />
            <!--SelectedItem without focus-->
            <!--<SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="#3399FF"/>-->
            <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="White"/>
        </Style.Resources>
    </Style>


    <!--公众号置顶-->
    <Style  x:Key="TopListItemStyle" TargetType="{x:Type ListViewItem}">
        <Setter Property="Cursor" Value="Hand"/>
        <!--<Setter Property="Width" Value="260"/>-->
        <!--<Setter Property="Width" Value="{Binding Width}"/>-->
        <Setter Property="Height" Value="57"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
        <Setter Property="FontFamily" Value="Microsoft YaHei"/>
        <Setter Property="Padding" Value="0,0,0,0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border x:Name="Bd" BorderThickness="0"  Margin="0" Padding="0" SnapsToDevicePixels="true">
                        <Grid  Name="Grid" Margin="5,0,10,0"   Background="Transparent" ShowGridLines="False" >
                            <Grid.RowDefinitions >
                                <RowDefinition Height="0.5*"/>
                                <RowDefinition Height="0.5*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="55"/>
                                <ColumnDefinition />
                                <ColumnDefinition Width="38"/>
                            </Grid.ColumnDefinitions>

                            <Border Name="EllipseWithImageBrush"  BorderBrush="{DynamicResource AvatarBorderBrush}"   BorderThickness="{DynamicResource AvatarThickness}"  Margin="0"  HorizontalAlignment="Center"
                              Height="38" Width="38"  VerticalAlignment="Center"  Grid.Column="0" Grid.RowSpan="2"  CornerRadius="{DynamicResource AvatarCornerRadius}"   UseLayoutRounding="True">
                                <Grid>
                                    <Border Name="imgBorder"  Background="White"    CornerRadius="{DynamicResource AvatarCornerRadius}" />
                                    <Image Name="Ico" Source="{Binding Path=AvatarPath, Mode=OneWay}" Stretch="Fill"  >
                                        <Image.OpacityMask>
                                            <VisualBrush Visual="{Binding ElementName=imgBorder, Mode=OneTime}" />
                                        </Image.OpacityMask>
                                    </Image>
                                </Grid>
                            </Border>
                            <TextBlock Name="LbDate" Text="{Binding Path=DateStr, Mode=OneWay}"    Width="auto" VerticalAlignment="Bottom"
               IsEnabled="False" HorizontalAlignment="Left" Grid.Column="2"  ScrollViewer.VerticalScrollBarVisibility="Disabled" 
               Grid.Row="0" FontSize="12" Foreground="{DynamicResource foreground99}" />
                            <!--<Label Name="LbDate" Content="{Binding Path=DateStr, Mode=OneWay}"  HorizontalContentAlignment="Left"  Width="45"
               IsEnabled="False" BorderThickness="0" VerticalContentAlignment="Center" Grid.Column="1"  ScrollViewer.VerticalScrollBarVisibility="Disabled" 
               Grid.Row="0" FontSize="12" Foreground="{DynamicResource foreground99}" Grid.ColumnSpan="2" Margin="144,0,0,0" />-->
                            <TextBlock Name="LbTitle" Text="{Binding Path=Name, Mode=OneWay}"  IsEnabled="False"   Grid.Row="0"
                 Grid.Column="1"   ScrollViewer.VerticalScrollBarVisibility="Disabled" FontSize="14"  VerticalAlignment="Bottom"
                                   TextTrimming="CharacterEllipsis"  Width="120" ToolTip="{Binding Path=Name, Mode=OneWay}"
               Margin="5,0,25,4" Foreground="{DynamicResource foreground33}" HorizontalAlignment="Left"/>
                            <VirtualizingStackPanel Grid.Column="1" Grid.Row="1" Orientation="Horizontal" Margin="5,0,0,0">

                                <TextBlock Name="LbContent"  TextTrimming="CharacterEllipsis"  Width="130"
               IsEnabled="False" VerticalAlignment="Top" ScrollViewer.VerticalScrollBarVisibility="Disabled" 
               FontSize="12"  Foreground="{DynamicResource foreground88}" >
                                    <TextBlock.Tag >
                                        <MultiBinding Converter="{StaticResource ReplaceEmojiToIcoConvertor}" >
                                            <Binding Path="LastMessage" />
                                            <Binding ElementName="LbContent"  />
                                        </MultiBinding>
                                    </TextBlock.Tag>
                                </TextBlock>
      
                            </VirtualizingStackPanel>
                            <Ellipse Name="ImgYuan" Visibility="{Binding ShowYuan,Converter={StaticResource BoolToVisibilityConvertor}, Mode=OneWay}"  Fill="#FF6159"
                                    HorizontalAlignment="Left" Grid.Row="1" Grid.Column="2"   VerticalAlignment="Top" Stretch="Fill" Width="10" Height="10" />
                            <Button Name="BtnUnred"  Grid.Row="1" Grid.Column="2" Style="{DynamicResource Unread}" 
                                        Content="{Binding Path=NewMsgCount, Mode=OneWay,Converter={StaticResource UnReadConvertor}}"  VerticalAlignment="Center" Margin="0,0,0,10" />
                            <Image  Name="ImgQuiet"  Visibility="{Binding Path=Quiet, Mode=OneWay,Converter={StaticResource BoolToVisibilityConvertor}}"  HorizontalAlignment="Right" 
                                        Grid.Row="1" Grid.Column="2" Source="pack://application:,,,/ResourceDictionary;Component/Images/Message_nodistrub.png" 
                                        Stretch="Fill" Width="15" Height="15"  Margin="0,0,5,0" VerticalAlignment="Top"></Image>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--<DataTrigger  Binding="{Binding  Path=Top}" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="#F2F2F2"/>
                        </DataTrigger>-->
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="#D4EDFF"/>
                        </Trigger>
                        <!--<Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="#D4EDFF"/>
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
        <Style.Resources>
            <!--SelectedItem with focus-->
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#D4EDFF" />
            <!--SelectedItem without focus-->
            <!--<SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="#3399FF"/>-->
            <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="White"/>
        </Style.Resources>
    </Style>

     <!--单条通讯录样式 圆头像-->
    <Style  x:Key="GzhListItemStyle" TargetType="{x:Type ListViewItem}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="Width" Value="260"/>
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="FontFamily" Value="Microsoft YaHei"/>
        <Setter Property="Padding" Value="0,0,0,0"/>
        <Setter Property="BorderThickness" Value="0,0,0,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border x:Name="Bd" BorderThickness="0"  Margin="0" Padding="0" >
                        <Grid  Name="GridContact" Margin="15,0,0,0" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="50"/>
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Border Name="EllipseWithImageBrush"  BorderBrush="{DynamicResource AvatarBorderBrush}"   BorderThickness="{DynamicResource AvatarThickness}"  Margin="0"  HorizontalAlignment="Center"
                              Height="35" Width="35"  VerticalAlignment="Center"  Grid.Column="0" Grid.RowSpan="2"  CornerRadius="{DynamicResource AvatarCornerRadius}"   UseLayoutRounding="True">
                                <Grid>
                                    <Border Name="imgBorder"  Background="White"    CornerRadius="{DynamicResource AvatarCornerRadius}" />
                                    <Image Name="Ico" Source="{Binding Path=logoPath, Mode=OneWay}" Stretch="Fill"  >
                                        <Image.OpacityMask>
                                            <VisualBrush Visual="{Binding ElementName=imgBorder, Mode=OneTime}" />
                                        </Image.OpacityMask>
                                    </Image>
                                </Grid>
                            </Border>
                            <!--<Ellipse  x:Name="EllipseWithImageBrush" StrokeThickness="{DynamicResource Ellipse_}"  Stroke="#cccccc"  Margin="5" HorizontalAlignment="Left" 
                 Height="40" Width="40"  VerticalAlignment="Top" Grid.Column="0" Grid.RowSpan="2"  >
                                <Ellipse.Fill>
                                    <ImageBrush  x:Name="Ico" ImageSource="{Binding Path=logoPath, Mode=OneWay}"/>
                                </Ellipse.Fill>
                            </Ellipse>-->
                            <Label Name="LbTitle"  IsEnabled="False"  BorderThickness="0" VerticalContentAlignment="Center"    Grid.Column="1"  Content="{Binding Path=name, Mode=OneWay}" ScrollViewer.VerticalScrollBarVisibility="Disabled" FontSize="14" Foreground="{DynamicResource foreground33}" Margin="12,0,0,0" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource rowClickBackground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#D4EDFF" />
            <!--SelectedItem without focus-->
            <!--<SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="#3399FF"/>-->
            <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="White"/>
        </Style.Resources>
        <!-- 设置触发器 -->
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="false">
                <Setter Property="Background" Value="White"/>
            </Trigger>

        </Style.Triggers>
    </Style>

    <!--单条通讯录样式 方头像-->
    <Style  x:Key="AppListItemStyle" TargetType="{x:Type ListViewItem}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Margin" Value="-5,0,0,0"/>
        <Setter Property="Height" Value="60"/>
        <Setter Property="FontFamily" Value="Microsoft YaHei"/>
        <Setter Property="Padding" Value="0,0,0,0"/>
        <Setter Property="BorderThickness" Value="0,0,0,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border x:Name="Bd" BorderThickness="0"  Margin="0" Padding="0" BorderBrush="Black">
                        <Grid  Name="GridContact" Margin="8,0,0,0" ShowGridLines="False" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="50"/>
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <!--<Border Name="bdGoodDetail"  BorderBrush="#cccccc"   BorderThickness="1"   CornerRadius="4"
                                    HorizontalAlignment="Left"  Height="40" Width="40"  VerticalAlignment="Top" Grid.Column="0" Grid.RowSpan="2" >
                                <Grid>
                                    <Border Name="imgBorder"  Background="White"    CornerRadius="4" />
                                    <Image Name="image" Source="{Binding Path=logoPath, Mode=OneWay}" Stretch="Fill"    >
                                        <Image.OpacityMask>
                                            <VisualBrush Visual="{Binding ElementName=imgBorder, Mode=OneTime}" />
                                        </Image.OpacityMask>
                                    </Image>
                                </Grid>
                            </Border>-->
                            <Image Name="Ico"   Grid.Column="0"     Height="35" Width="35" Source="{Binding Path=logoPath, Mode=OneWay}" Margin="2" UseLayoutRounding="True"/>
                            <Label Name="LbTitle"  IsEnabled="False"  BorderThickness="0" VerticalContentAlignment="Center"    Grid.Column="1"  Content="{Binding Path=name, Mode=OneWay}" ScrollViewer.VerticalScrollBarVisibility="Disabled" FontSize="14" Foreground="{DynamicResource foreground33}" Margin="12,0,0,0" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource rowClickBackground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#D4EDFF" />
            <!--SelectedItem without focus-->
            <!--<SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="#3399FF"/>-->
            <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="White"/>
        </Style.Resources>
        <!-- 设置触发器 -->
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="false">
                <Setter Property="Background" Value="White"/>
            </Trigger>

        </Style.Triggers>
    </Style>





    <Style  x:Key="PcStartListItemStyle" TargetType="{x:Type ListViewItem}">
        <Setter Property="Cursor" Value="Hand"/>
        <!--<Setter Property="Height" Value="60"/>-->
        <Setter Property="FontSize" Value="12px"/>
        <Setter Property="FontFamily" Value="Microsoft YaHei"/>
        <Setter Property="Padding" Value="0,0,0,0"/>
        <Setter Property="Margin" Value="0,15,0,0"/>
        <Setter Property="BorderThickness" Value="0,0,0,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border x:Name="Bd" BorderThickness="0"  Margin="0" Padding="0" Background="Transparent">
                        <Grid  Name="GridContact"  ShowGridLines="False" >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>
                            <Image Name="Ico"  Stretch="None" SnapsToDevicePixels="True"  RenderOptions.BitmapScalingMode="NearestNeighbor" Grid.Row="0"    Source="{Binding Path=LogoPath, Mode=OneWay}"  UseLayoutRounding="True"/>
                            <Ellipse Name="ImgYuan" Visibility="{Binding UnRead,Converter={StaticResource BoolToVisibilityConvertor}, Mode=OneWay}"  Fill="#FF6159" HorizontalAlignment="Right" Margin="0,0,12,0"
                                    Grid.Row="0"   VerticalAlignment="Top" Stretch="Fill" Width="10" Height="10" />
                            <TextBlock Name="LbTitle"  IsEnabled="False"  VerticalAlignment="Top" HorizontalAlignment="Center"    Grid.Row="1"  Text="{Binding Path=Name, Mode=OneWay}" ScrollViewer.VerticalScrollBarVisibility="Disabled" FontSize="12" Foreground="{DynamicResource foreground99}" Margin="0,7,0,0" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Ico" Property="Source" Value="{Binding Path=CheckLogoPath, Mode=OneWay}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>





   
</ResourceDictionary>