.TH "EventBus.OrderedEventBus" 3 "Thu May 5 2016" "Version 1.1.2" "EventBus" \" -*- nroff -*-
.ad l
.nh
.SH NAME
EventBus.OrderedEventBus \- The \fBOrderedEventBus\fP class is a simple and fast \fBIEventBus\fP implemention which processes event in the delivery order\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBEventBus\&.IEventBus\fP, and IDisposable\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBOrderedEventBus\fP (int maxPendingEventNumber)"
.br
.RI "\fIThe constructor of \fBOrderedEventBus\fP\&. \fP"
.ti -1c
.RI "void \fBPost\fP (object eventObject, TimeSpan dispatchDelay)"
.br
.RI "\fIPost an event to the event bus, dispatched after the specific time\&. \fP"
.ti -1c
.RI "void \fBRegister\fP (object handler)"
.br
.RI "\fIRegister event handlers in the handler instance\&. One handler instance may have many event handler methods\&. These methods have \fBEventSubscriberAttribute\fP contract and exactly one parameter\&. \fP"
.ti -1c
.RI "void \fBDeregister\fP (object handler)"
.br
.RI "\fIDeregister event handlers belong to the handler instance\&. One handler instance may have many event handler methods\&. These methods have \fBEventSubscriberAttribute\fP contract and exactly one parameter\&. \fP"
.ti -1c
.RI "void \fBDispose\fP ()"
.br
.RI "\fIReleases resources used by the \fBEventBus\&.OrderedEventBus\fP instance\&. \fP"
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBOrderedEventBus\fP \fBGetDefaultEventBus\fP ()"
.br
.RI "\fIGet the global \fBOrderedEventBus\fP instance\&. \fP"
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "int \fBPendingEventNumber\fP => Math\&.Max(_eventQueue\&.Count, 0)"
.br
.RI "\fIThe pending event number which does not yet dispatched\&. \fP"
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "virtual void \fBDispose\fP (bool disposing)"
.br
.RI "\fIReleases resources used by the \fBEventBus\&.OrderedEventBus\fP instance\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
The \fBOrderedEventBus\fP class is a simple and fast \fBIEventBus\fP implemention which processes event in the delivery order\&. 

If you do not need the event processed in the delivery order, use \fBSimpleEventBus\fP instead\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "EventBus\&.OrderedEventBus\&.OrderedEventBus (int maxPendingEventNumber)\fC [inline]\fP"

.PP
The constructor of \fBOrderedEventBus\fP\&. 
.PP
\fBParameters:\fP
.RS 4
\fImaxPendingEventNumber\fP The maximum pending event number which does not yet dispatched
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "void EventBus\&.OrderedEventBus\&.Deregister (object handler)\fC [inline]\fP"

.PP
Deregister event handlers belong to the handler instance\&. One handler instance may have many event handler methods\&. These methods have \fBEventSubscriberAttribute\fP contract and exactly one parameter\&. 
.PP
\fBParameters:\fP
.RS 4
\fIhandler\fP The instance of event handler class
.RE
.PP

.PP
Implements \fBEventBus\&.IEventBus\fP\&.
.SS "void EventBus\&.OrderedEventBus\&.Dispose ()\fC [inline]\fP"

.PP
Releases resources used by the \fBEventBus\&.OrderedEventBus\fP instance\&. 
.SS "virtual void EventBus\&.OrderedEventBus\&.Dispose (bool disposing)\fC [inline]\fP, \fC [protected]\fP, \fC [virtual]\fP"

.PP
Releases resources used by the \fBEventBus\&.OrderedEventBus\fP instance\&. 
.PP
\fBParameters:\fP
.RS 4
\fIdisposing\fP 
.RE
.PP

.SS "static \fBOrderedEventBus\fP EventBus\&.OrderedEventBus\&.GetDefaultEventBus ()\fC [inline]\fP, \fC [static]\fP"

.PP
Get the global \fBOrderedEventBus\fP instance\&. 
.PP
\fBReturns:\fP
.RS 4
The global \fBOrderedEventBus\fP instance
.RE
.PP

.SS "void EventBus\&.OrderedEventBus\&.Post (object eventObject, TimeSpan dispatchDelay)\fC [inline]\fP"

.PP
Post an event to the event bus, dispatched after the specific time\&. If you do not need the event processed in the delivery order, use \fBSimpleEventBus\fP instead\&.
.PP
\fBParameters:\fP
.RS 4
\fIeventObject\fP The event object
.br
\fIdispatchDelay\fP The delay time before dispatch this event
.RE
.PP

.PP
Implements \fBEventBus\&.IEventBus\fP\&.
.SS "void EventBus\&.OrderedEventBus\&.Register (object handler)\fC [inline]\fP"

.PP
Register event handlers in the handler instance\&. One handler instance may have many event handler methods\&. These methods have \fBEventSubscriberAttribute\fP contract and exactly one parameter\&. If you do not need the event processed in the delivery order, use \fBSimpleEventBus\fP instead\&.
.PP
\fBParameters:\fP
.RS 4
\fIhandler\fP The instance of event handler class
.RE
.PP

.PP
Implements \fBEventBus\&.IEventBus\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "int EventBus\&.OrderedEventBus\&.PendingEventNumber => Math\&.Max(_eventQueue\&.Count, 0)"

.PP
The pending event number which does not yet dispatched\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for EventBus from the source code\&.
