<UserControl x:Class="cn.lds.chatcore.pcw.Views.Control.SelectOrgControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ResourceDictionary.Control;assembly=ResourceDictionary"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:converters="clr-namespace:ResourceDictionary.Converters;assembly=ResourceDictionary"

             mc:Ignorable="d" 
             d:DesignHeight="400" d:DesignWidth="300" Loaded="UserControl_Loaded">
    <UserControl.Resources>
        <converters:OrgBarConvertor x:Key="OrgBarConvertor"/>
        <Style TargetType="ToggleButton" x:Key="stlToggleButton">
            <Setter Property="Foreground" Value="White"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border x:Name="Back" Background="#F2F2F2" BorderThickness="0.5" BorderBrush="Transparent">
                            <Path Name="PathFill" Fill="#999999" Width="8" Height="6" StrokeThickness="0" Data="M5,0 L10,10 L0,10 z" RenderTransformOrigin="0.5,0.5" Stretch="Fill">
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform Angle="180"/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="PathFill" Property="Fill" Value="White"></Setter>
                                <Setter TargetName="Back" Property="Background" Value="#59CA4F"></Setter>
                                <Setter TargetName="Back" Property="BorderBrush" Value="#59CA4F"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style TargetType="ComboBox" x:Key="stlComboBox">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="FontFamily" Value="Microsoft YaHei"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="HorizontalAlignment" Value="Left"></Setter>
            <Setter Property="Foreground" Value="Black"></Setter>
            <Setter Property="FontSize" Value="12"></Setter>
            <Setter Property="Height" Value="25"></Setter>
            <Setter Property="Margin" Value="0,0,0,0"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="0.8*" MaxWidth="70"/>
                                <ColumnDefinition Width="0.2*" MaxWidth="30"/>
                            </Grid.ColumnDefinitions>
                            <Button  x:Name="strTxt" Grid.Column="0" Margin="2" Content="{TemplateBinding Text}" BorderBrush="#F2F2F2"
                                     Style="{DynamicResource TextButton}"  Background="#F2F2F2" FontSize="12" BorderThickness="0" Foreground="#1296DB">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Click">
                                        <i:InvokeCommandAction Command="{Binding Path=TextrMouseLeftButtonUpCommand}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Button>
                            <Border  Grid.Column="0" BorderThickness="0,0,0,0" BorderBrush="#cccccc" CornerRadius="0,0,0,0">
                            </Border>
                            <Border Grid.Column="1" BorderThickness="0,0,0,0" BorderBrush="#cccccc" CornerRadius="0,1,1,0">
                                <ToggleButton Style="{StaticResource stlToggleButton}" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"></ToggleButton>
                            </Border>
                            <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide">
                                <Border CornerRadius="1" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" x:Name="DropDown" SnapsToDevicePixels="True">
                                    <Border.Effect>
                                        <DropShadowEffect Color="Black" BlurRadius="2" ShadowDepth="0" Opacity="0.5"/>
                                    </Border.Effect>
                                    <ScrollViewer Margin="4,6,4,6" Style="{DynamicResource ScrollViewerStyle}" MaxHeight="{TemplateBinding MaxDropDownHeight}" SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="True">
                                        <!-- StackPanel 用于显示子级，方法是将 IsItemsHost 设置为 True -->
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" Background="White"/>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style  x:Key="ListBoxItemStyle" TargetType="{x:Type ListBoxItem}" >
            <Setter Property="Height" Value="30"/>
            <Setter Property="Margin" Value="5,0,0,0"/>
            <Setter Property="HorizontalAlignment" Value="Left"></Setter>
            <Setter Property="FontFamily" Value="Microsoft YaHei"/>
            <Setter Property="Padding" Value="0,0,0,0"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Grid  Name="Grid" Margin="0,0,0,0"  Cursor="Hand" Background="Transparent" Width="auto">
                            <TextBlock Name="LbTitle"  TextTrimming="CharacterEllipsis"
                                           VerticalAlignment="Center" 
                                           ScrollViewer.VerticalScrollBarVisibility="Disabled" FontSize="12"
                                           Margin="5,0,5,0" Foreground="{DynamicResource foreground33}">
                                <TextBlock.Text>
                                    <MultiBinding Converter="{StaticResource OrgBarConvertor}" >
                                        <Binding Path="name" />
                                        <Binding Path="parentId" />
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Foreground" TargetName="LbTitle" Value="#1296DB"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
         
        </Style>

        <Style  x:Key="XListItemStyle" TargetType="{x:Type ListViewItem}">
            <Setter Property="Height" Value="40"/>
            <Setter Property="Margin" Value="5,0,5,0"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
            <Setter Property="FontFamily" Value="Microsoft YaHei"/>
            <Setter Property="Padding" Value="0,0,0,0"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border x:Name="Bd" BorderThickness="0" Margin="0" Padding="0" 
                                SnapsToDevicePixels="true">
                            <Grid  Name="Grid" Margin="0,0,15,0"  Cursor="Hand" Background="Transparent">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="40"/>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="10"/>
                                </Grid.ColumnDefinitions>
                                <Ellipse  x:Name="EllipseWithImageBrush" StrokeThickness="{DynamicResource Ellipse_}"
                                              Stroke="#cccccc"   HorizontalAlignment="Left" 
                                              Height="30" 
                                              Width="30"
                                              d:LayoutOverrides="Height" VerticalAlignment="Center" 
                                              Grid.Column="0"  >
                                    <Ellipse.Fill>
                                        <ImageBrush  x:Name="Ico" ImageSource="{Binding Path=logoPath}"/>
                                    </Ellipse.Fill>
                                </Ellipse>
                                <TextBlock Name="LbTitle" Text="{Binding Path=name}"
                                           Grid.Row="0" Grid.Column="1"
                                           VerticalAlignment="Center"
                                           ScrollViewer.VerticalScrollBarVisibility="Disabled" FontSize="14"
                                           Margin="5,0,25,0" Foreground="{DynamicResource foreground33}">
                                </TextBlock>
                                <Image Source="pack://application:,,,/ResourceDictionary;Component/Images/Arrow_right.png" 
                                       Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Right" ></Image>
                              
                            </Grid>
                        </Border>
                     
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="#D4EDFF"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Resources>
                <!--SelectedItem with focus-->
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#D4EDFF" />
                <!--SelectedItem without focus-->
                <!--<SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="#3399FF"/>-->
                <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="White"/>
            </Style.Resources>
        </Style>

    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition />
        </Grid.RowDefinitions>
        <!--DisplayMemberPath="name"   SelectedValuePath="tenant"-->
        <StackPanel Orientation="Horizontal" Margin="0" Grid.Row="0"  Background="#F2F2F2">
            <ComboBox x:Name="cmb"  Width="auto" Text="name" DisplayMemberPath="name" 
                      SelectedValuePath="tenant"  Margin="5,0,0,0"
             SelectedIndex="-1"  DropDownClosed="cmb_DropDownClosed" Style="{StaticResource stlComboBox}" />
            <ListBox x:Name="ListBar"    VerticalAlignment="Center"  ItemContainerStyle="{StaticResource ListBoxItemStyle}" >
                <ListBox.Template>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <ScrollViewer VerticalContentAlignment="Center"  Height="30" Background="#F2F2F2" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Disabled" Template="{DynamicResource MyScrollViewerControlTemplate}">
                            <WrapPanel Orientation="Horizontal" IsItemsHost="True" ScrollViewer.CanContentScroll="True"/>
                        </ScrollViewer>
                    </ControlTemplate>
                </ListBox.Template>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseLeftButtonUp">
                        <i:InvokeCommandAction Command="{Binding Path=ListBarMouseLeftButtonUpCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ListBox>
        </StackPanel>
       
        <local:DingScrollview x:Name="ScrollViewer" HorizontalAlignment="Stretch" Grid.Row="1"
                       VerticalAlignment="Stretch"        Background="White"
                      Margin="10,0,0,0"   >
            <StackPanel  Orientation="Vertical" >
                <ListView  x:Name="ListViewOrg"  HorizontalAlignment="Stretch"  
                           Background="White" Height="auto"  
                           Style="{DynamicResource ListViewStyle}" 
                           ItemContainerStyle="{StaticResource XListItemStyle}"  
                           Width="{Binding ActualWidth, ElementName=ScrollViewer}" >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseLeftButtonUp">
                            <i:InvokeCommandAction Command="{Binding Path=ListOrgMouseLeftButtonUpCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ListView>
                <ListView  x:Name="ListViewLxr"  HorizontalAlignment="Stretch"  
                           Background="White" 
                           Height="auto"  Style="{DynamicResource ListViewStyle}" ItemContainerStyle="{DynamicResource ListItemStyle}"  
                           VerticalAlignment="Stretch" Width="{Binding ActualWidth, ElementName=ScrollViewer}"  />
            </StackPanel>
        </local:DingScrollview>

    </Grid>
</UserControl>
